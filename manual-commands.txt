alias kubectl="minikube kubectl --"
kubectl run -it testpod --image nginx
kubectl deploy nginx --image nginx -n sanz --dry-run=client -o yaml
kubectl apply -f https://k8s.io/examples/pods/simple-pod.yaml
kubectl api-resources

kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.15.2/config/manifests/metallb-native.yaml
kubectl create -f ip-pool.yml

git clone https://github.com/kubernetes/ingress-nginx
cd ingress-nginx/deploy/static/provider/cloud/
kubectl create -f deploy.yaml

kubectl create deployment web-main --image=luissanzaguilar/spring-boot-web-main:latest --replicas=1
kubectl create deployment web-one --image=luissanzaguilar/spring-boot-web-one:latest --replicas=1
kubectl create deployment web-two --image=luissanzaguilar/spring-boot-web-two:latest --replicas=1

kubectl get pod -A

kubectl expose deployment web-main --target-port=8080 --port=8080
kubectl expose deployment web-one --target-port=8080 --port=8080
kubectl expose deployment web-two --target-port=8080 --port=8080

kubectl create -f ingress.yml

kubectl port-forward -n ingress-nginx service/ingress-nginx-controller 8080:80
# y probar desde otra terminal los curl:
curl http://localhost:8080/main
curl http://localhost:8080/hello
curl http://localhost:8080/bye

kubectl get ingress
kubectl describe ingress



# prometheus and graphana con helm installed

minikube addons enable metrics-server

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

helm repo update

helm install stable prometheus-community/kube-prometheus-stack

NOTES:
kube-prometheus-stack has been installed. Check its status by running:
  kubectl --namespace default get pods -l "release=stable"

Get Grafana 'admin' user password by running:

  kubectl --namespace default get secrets stable-grafana -o jsonpath="{.data.admin-password}" | base64 -d ; echo

Access Grafana local instance:

  export POD_NAME=$(kubectl --namespace default get pod -l "app.kubernetes.io/name=grafana,app.kubernetes.io/instance=stable" -oname)
  kubectl --namespace default port-forward $POD_NAME 3000



kubectl edit svc stable-kube-prometheus-sta-prometheus
de ClusterIp cambiamos a NodePort

porfordward
kubectl port-forward --address 0.0.0.0 service/stable-kube-prometheus-sta-prometheus 30326:9090 &

accedemos a public ip 30326 desde nuestro navegador

grafana en 30327

kubectl edit svc stable-grafana
kubectl port-forward --address 0.0.0.0 service/stable-grafana 30327:80 &

grafana admin pass prom-operator


