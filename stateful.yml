# mysql-statefulset-fixed.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  ports:
    - name: mysql
      port: 3306
  clusterIP: None
  selector:
    app: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-readonly
  labels:
    app: mysql
spec:
  ports:
    - name: mysql
      port: 3306
  selector:
    app: mysql
    role: replica
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  init.sql: |
    CREATE USER IF NOT EXISTS 'replicator'@'%' IDENTIFIED BY 'replicatepass';
    GRANT REPLICATION SLAVE ON *.* TO 'replicator'@'%';
    CREATE USER IF NOT EXISTS 'appuser'@'%' IDENTIFIED BY 'apppass';
    CREATE DATABASE IF NOT EXISTS appdb;
    GRANT ALL PRIVILEGES ON appdb.* TO 'appuser'@'%';
    FLUSH PRIVILEGES;
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: "mysql"
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
        - name: init-mysql
          image: busybox
          command: ['sh', '-c']
          args:
            - |
              # Crear configuración de replicación
              mkdir -p /mnt/conf.d
              hostname=$(hostname)
              ordinal=${hostname##*-}
              
              echo "[mysqld]" > /mnt/conf.d/replication.cnf
              echo "server-id=$((100 + $ordinal))" >> /mnt/conf.d/replication.cnf
              echo "log-bin=mysql-bin" >> /mnt/conf.d/replication.cnf
              echo "binlog_format=row" >> /mnt/conf.d/replication.cnf
              
              if [ "$ordinal" -gt "0" ]; then
                echo "read_only=1" >> /mnt/conf.d/replication.cnf
              fi
              
              echo "Configuración creada para pod $ordinal con server-id $((100 + $ordinal))"
          volumeMounts:
            - name: mysql-conf
              mountPath: /mnt/conf.d
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "password"
            - name: MYSQL_DATABASE
              value: "appdb"
            - name: MYSQL_USER
              value: "appuser"
            - name: MYSQL_PASSWORD
              value: "apppass"
          ports:
            - name: mysql
              containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
            - name: mysql-conf
              mountPath: /etc/mysql/conf.d  # ✅ Solo un volumen montado aquí
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d  # ✅ Ruta diferente
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["mysql", "-h", "127.0.0.1", "-uroot", "-ppassword", "-e", "SELECT 1"]
            initialDelaySeconds: 30
            periodSeconds: 5
      volumes:
        - name: mysql-conf
          emptyDir: {}
        - name: init-scripts
          configMap:
            name: mysql-config
            items:
              - key: init.sql
                path: init.sql
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "standard"
        resources:
          requests:
            storage: 5Gi